modify_file_task:
  description: >
    Write a python code to modify text and tables from the PDF at {file_path}, apply modifications: {modifications}, and save the modified document while maintaining its original format.
    The script should:
    - Modify text and table contents according to {modifications} while preserving the file structure.
    - Use the directory_tool if the file path is not found
    - Modify tables, text, or any specified content as per user instructions.
    - Ensure that modifications seamlessly integrate with the existing content without altering the document's formatting.
    - Implement robust error handling, logging, and validation to prevent data loss or corruption.
    -In the code The final modified PDF should be saved as the the directory path of the directory_tool /new.pdf . Example: if the directory path is /Users/saish/Downloads/POC_Nhilent/nihilentpoc/src/nihilentpoc then store the modified PDF as /Users/saish/Downloads/POC_Nhilent/nihilentpoc/src/nihilentpoc/new.pdf
  expected_output: >
    A well-structured Python script that correctly modifies the PDF document as per {modifications} and saves the updated file.
    The final output should be the generated Python script, ready for execution.
  agent: code_writer


execute_and_save_task_main:
  description: >
    Execute the provided Python code without any errors.
    Some important details:
    -The file is present at {file_path}
    - If the file is not found by the agent then use the directory_tool to locate it
  expected_output: >
   An error-free and accurate execution of the Python script, ensuring the PDF is correctly modified as per {modifications}.
   Check if the final modified PDF is saved as the the directory path of the directory_tool /new.pdf
  agent: code_executor

